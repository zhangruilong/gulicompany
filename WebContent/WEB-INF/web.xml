<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">

<display-name>gulicompany</display-name>
<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>  
        <listener-class>org.springframework.web.context.ContextCleanupListener</listener-class>  
    </listener>
 <welcome-file-list>
 <welcome-file>login.jsp</welcome-file>
 </welcome-file-list>
 <filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
 <filter>
     <filter-name>login</filter-name>
     <filter-class>com.system.tools.LoginFilter</filter-class>
 </filter>
 <filter-mapping>
     <filter-name>login</filter-name>
     <url-pattern>/pages/*</url-pattern>
     <url-pattern>/main.jsp</url-pattern>
     <url-pattern>/login.jsp</url-pattern>
 </filter-mapping>
 
 <!-- wxpay -->
  <servlet>
    <servlet-name>WxpayNotifyGatewayServlet</servlet-name>
    <servlet-class>com.github.cuter44.wxpay.servlet.WxpayNotifyGatewayServlet</servlet-class>
    <init-param> 
        <description>DEBUG SWITCH: If true, internal Properties storing parsed content will be dumped to container's stdout.</description>
        <param-name>com.github.cuter44.wxpay.notifygateway.dump</param-name> 
        <param-value>true</param-value> 
    </init-param>
    <init-param> 
        <description>DEBUG SWITCH: If true, gateway will run in DRY-RUN mode.(just send "success" to wxpay server but do nothing else)</description>
        <param-name>com.github.cuter44.wxpay.notifygateway.dryrun</param-name> 
        <param-value>true</param-value> 
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>WxpayNotifyGatewayServlet</servlet-name>
    <url-pattern>/guliwang/notify.api</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>JSAPISigner</servlet-name>
    <servlet-class>com.github.cuter44.wxpay.servlet.JSAPISigner</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>JSAPISigner</servlet-name>
    <url-pattern>/guliwang/jsapi-signer.api</url-pattern>
  </servlet-mapping>

  <!-- wxmp -->
  <servlet>
    <servlet-name>SnsapiBase</servlet-name>
    <servlet-class>com.github.cuter44.wxmp.servlet.SnsapiBase</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>SnsapiBase</servlet-name>
    <url-pattern>/guliwang/snsapi-base.api</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>SnsapiUserinfo</servlet-name>
    <servlet-class>com.github.cuter44.wxmp.servlet.SnsapiUserinfo</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>SnsapiUserinfo</servlet-name>
    <url-pattern>/guliwang/snsapi-userinfo.api</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>JSSDKConfig</servlet-name>
    <servlet-class>com.github.cuter44.wxmp.servlet.JSSDKConfig</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>JSSDKConfig</servlet-name>
    <url-pattern>/guliwang/jssdk-config.api</url-pattern>
  </servlet-mapping>

  <!-- wxmsg -->
  <servlet>
    <servlet-name>WxmsgGatewayServlet</servlet-name>
    <servlet-class>com.github.cuter44.wxmsg.servlet.WxmsgGatewayServlet</servlet-class>
    <init-param> 
        <description>DEBUG SWITCH: If true, internal Properties storing parsed content will be dumped to container's stdout.</description>
        <param-name>com.github.cuter44.wxmsg.msggateway.dump</param-name> 
        <param-value>true</param-value> 
    </init-param>
    <init-param> 
        <description>DEBUG SWITCH: If true, automatically accept Echos with no checks.</description>
        <param-name>com.github.cuter44.wxmsg.msggateway.acceptalllinkin</param-name> 
        <param-value>true</param-value> 
    </init-param>
    <init-param> 
        <description>DEBUG SWITCH: If true, reply text message by echoing same content.</description>
        <param-name>com.github.cuter44.wxmsg.msggateway.echotext</param-name> 
        <param-value>true</param-value> 
    </init-param>
    <init-param> 
        <description>DEBUG SWITCH: If true, reply fallback "success" as wx-spec instructs.</description>
        <param-name>com.github.cuter44.wxmsg.msggateway.replysuccess</param-name> 
        <param-value>true</param-value> 
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>WxmsgGatewayServlet</servlet-name>
    <url-pattern>/guliwang/msg-gateway.spi</url-pattern>
  </servlet-mapping>

  <!-- wxcp -->
  <servlet>
    <servlet-name>CorpSnsapiBase</servlet-name>
    <servlet-class>com.github.cuter44.wxcp.servlet.CorpSnsapiBase</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>CorpSnsapiBase</servlet-name>
    <url-pattern>/guliwang/corp-snsapi-base.api</url-pattern>
  </servlet-mapping>
 <!-- springmvc前端控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等） 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml） -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 第一种：*.action，访问以.action结尾 由DispatcherServlet进行解析 第二种：/，所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析 
			使用此种方式可以实现 RESTful风格的url 第三种：/*，这样配置不对，使用这种配置，最终要转发到一个jsp页面时， 仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。 -->
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>
 <servlet>
  <servlet-name>BaseServlet</servlet-name>
  <servlet-class>com.system.tools.base.BaseServlet</servlet-class>
 </servlet>
  <servlet-mapping>
	  <servlet-name>BaseServlet</servlet-name>
	  <url-pattern>*.do</url-pattern>
 </servlet-mapping>
 
 <servlet>
  <servlet-name>Oauth2</servlet-name>
  <servlet-class>com.server.Oauth2</servlet-class>
 </servlet>
 <servlet-mapping>
	  <servlet-name>Oauth2</servlet-name>
	  <url-pattern>/Oauth2</url-pattern>
 </servlet-mapping>
 <login-config>
  <auth-method>BASIC</auth-method>
 </login-config>
</web-app>
